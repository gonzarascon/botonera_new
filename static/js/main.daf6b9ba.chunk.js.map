{"version":3,"sources":["constants/index.js","containers/Layout/styles.js","components/Header/styles.js","components/Header/index.js","components/Footer/styles.js","components/Footer/index.js","components/SoundButton/styles.js","components/SoundButton/index.js","containers/Layout/index.js","containers/Home/styles.js","constants/audios.js","containers/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["breakpoints","colors","darkText","Color","rgb","lighten","lightBackground","buttons","Utils","color","hsl","string","size","css","fade","darken","readColor","Wrapper","styled","div","Main","main","calculateRem","header","Title","h1","Header","footer","a","Footer","href","target","rel","src","title","neumorphism","buttonColor","_","sample","console","log","Box","props","isDark","Label","span","SoundButton","sound","label","handlePlay","playerId","playing","useState","loading","setLoading","onClick","onLoad","onEnd","className","Layout","children","section","audios","id","Home","currentPlaying","setCurrentPlaying","map","audio","key","isEqual","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.daf6b9ba.chunk.js","sourcesContent":["import Color from \"color\";\r\nimport { css } from \"styled-components\";\r\n\r\nexport const ICONS = {};\r\n\r\nexport const breakpoints = {\r\n  smallDevice: \"(min-width: 36em)\",\r\n  mediumDevice: \"(min-width: 48em)\",\r\n  largeDevice: \"(min-width: 62em)\",\r\n  fullHDevice: \"(min-width: 90em)\",\r\n};\r\n\r\nexport const colors = {\r\n  darkText: Color.rgb(10, 19, 39).lighten(0.25),\r\n  lightBackground: Color.rgb(255, 244, 241),\r\n  buttons: [\r\n    Color.rgb(72, 144, 243),\r\n    Color.rgb(87, 245, 138),\r\n    Color.rgb(180, 65, 245),\r\n    Color.rgb(245, 67, 67),\r\n  ],\r\n};\r\n\r\nexport const Utils = {\r\n  readColor: color => color.hsl().string(),\r\n  calculateRem: size => `${size / 16}rem`,\r\n  customBreakpoint: min => `(min-width: ${min / 16}em)`,\r\n  neumorphism: color => css`\r\n    border-radius: 20px;\r\n    background: ${color.hsl().string()};\r\n    box-shadow: 8px 8px 25px\r\n        ${color\r\n          .lighten(0.2)\r\n          .fade(0.45)\r\n          .hsl()\r\n          .string()},\r\n      -8px -8px 25px\r\n        ${color\r\n          .darken(0.2)\r\n          .fade(0.45)\r\n          .hsl()\r\n          .string()};\r\n  `,\r\n};\r\n","import styled from \"styled-components\";\r\nimport { breakpoints, colors, Utils } from \"../../constants\";\r\n\r\nconst { readColor } = Utils;\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  font-family: \"Rubik\", sans-serif;\r\n  color: ${readColor(colors.lightBackground)};\r\n  background-color: ${readColor(colors.darkText)};\r\n`;\r\n\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  min-height: calc(100vh - 100px - 150px);\r\n  padding: 25px 0;\r\n\r\n  @media ${breakpoints.mediumDevice} {\r\n    padding: 0;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { breakpoints, colors, Utils } from \"../../constants\";\r\n\r\nconst { readColor, calculateRem } = Utils;\r\n\r\nexport const Wrapper = styled.header`\r\n  width: 100%;\r\n  display: flex;\r\n  height: 150px;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 50px 25px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-size: ${calculateRem(45)};\r\n`;\r\n","import React from \"react\";\r\nimport { Wrapper, Title } from \"./styles\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Botonera de memes</Title>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { breakpoints, colors, Utils } from \"../../constants\";\r\n\r\nconst { readColor, calculateRem } = Utils;\r\n\r\nexport const Wrapper = styled.footer`\r\n  width: 100%;\r\n  height: 80px;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 50px 25px;\r\n`;\r\n\r\nexport const Title = styled.a`\r\n  font-weight: 100;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: ${calculateRem(20)};\r\n  text-decoration: none;\r\n  color: white;\r\n  & svg {\r\n    width: 100%;\r\n    max-width: 25px;\r\n    margin-right: 15px;\r\n    path {\r\n      fill: white;\r\n    }\r\n  }\r\n\r\n  &:visited {\r\n    text-decoration: none;\r\n    color: white;\r\n  }\r\n\r\n  @media ${breakpoints.mediumDevice} {\r\n    &:hover {\r\n      opacity: 0.75;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { Wrapper, Title } from \"./styles\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Wrapper>\r\n      <Title\r\n        href=\"https://github.com/gonzarascon\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <SVG src=\"./assets/icons/github.svg\" title=\"Github\" />\r\n        Hecho con amor a los memes\r\n      </Title>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport _ from \"lodash\";\r\nimport { breakpoints, colors, Utils } from \"../../constants\";\r\n\r\nconst { readColor, neumorphism, calculateRem } = Utils;\r\n\r\nconst buttonColor = _.sample(colors.buttons);\r\nconsole.log(\"buttonColor\", buttonColor);\r\n\r\nexport const Box = styled.div`\r\n  width: 100%;\r\n  height: 75px;\r\n  color: ${props =>\r\n    props.color.isDark() ? \"white\" : readColor(colors.darkText)};\r\n  ${props => neumorphism(props.color)};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: transform ease-in-out 0.3s;\r\n\r\n  @media ${breakpoints.mediumDevice} {\r\n    &:hover {\r\n      transform: scale(1.05);\r\n      cursor: pointer;\r\n    }\r\n    width: 150px;\r\n    height: 150px;\r\n  }\r\n\r\n  svg {\r\n    width: 50%;\r\n    height: 50%;\r\n\r\n    circle {\r\n      stroke: ${props =>\r\n        props.color.isDark() ? \"white\" : readColor(colors.darkText)};\r\n    }\r\n  }\r\n\r\n  .pause-icon {\r\n    max-height: 50px;\r\n\r\n    path {\r\n      fill: ${props =>\r\n        props.color.isDark() ? \"white\" : readColor(colors.darkText)};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  font-size: ${calculateRem(20)};\r\n  line-height: ${calculateRem(20)};\r\n  text-transform: uppercase;\r\n  padding: 15px;\r\n  text-align: center;\r\n  -webkit-user-select: none; /* Safari */\r\n  -moz-user-select: none; /* Firefox */\r\n  -ms-user-select: none; /* IE10+/Edge */\r\n  user-select: none;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactHowler from \"react-howler\";\r\nimport { Box, Label } from \"./styles\";\r\n\r\nfunction SoundButton({ sound, label, color, handlePlay, playerId, playing }) {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function renderLabel() {\r\n    if (playing) {\r\n      return (\r\n        <SVG\r\n          src=\"./assets/icons/pause.svg\"\r\n          title=\"Pause\"\r\n          className=\"pause-icon\"\r\n        />\r\n      );\r\n    }\r\n\r\n    return label;\r\n  }\r\n\r\n  return (\r\n    <Box color={color} onClick={() => handlePlay(playing ? null : playerId)}>\r\n      <ReactHowler\r\n        src={[`./assets/audio/${sound}.mp3`, `./assets/audio/${sound}.ogg`]}\r\n        playing={playing}\r\n        onLoad={() => setLoading(false)}\r\n        onEnd={() => handlePlay(null)}\r\n      />\r\n\r\n      {loading ? (\r\n        <SVG src=\"./assets/icons/loader.svg\" title=\"Loading\" />\r\n      ) : (\r\n        <Label>{renderLabel()}</Label>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nSoundButton.propTypes = {\r\n  sound: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  color: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SoundButton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Wrapper, Main } from \"./styles\";\r\n\r\nimport { Header, Footer } from \"../../components\";\r\n\r\nfunction Layout({ children }) {\r\n  return (\r\n    <Wrapper>\r\n      <Header />\r\n      <Main>{children}</Main>\r\n      <Footer />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n  width: 80%;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  margin: 0 auto;\r\n  grid-gap: 20px;\r\n  align-content: center;\r\n  justify-items: center;\r\n`;\r\n","import _ from \"lodash\";\r\nimport { colors } from \"./index\";\r\n\r\nconst audios = [\r\n  {\r\n    label: \"A Laburar\",\r\n    src: \"a-laburar\",\r\n    color: _.sample(colors.buttons),\r\n    id: 0,\r\n  },\r\n  {\r\n    label: \"Balada Showmatch\",\r\n    src: \"balada-showmatch\",\r\n    color: _.sample(colors.buttons),\r\n    id: 1,\r\n  },\r\n  {\r\n    label: \"Intelectual\",\r\n    src: \"intelectual\",\r\n    color: _.sample(colors.buttons),\r\n    id: 2,\r\n  },\r\n  {\r\n    label: \"Saxo sexy\",\r\n    src: \"saxo-sexy\",\r\n    color: _.sample(colors.buttons),\r\n    id: 3,\r\n  },\r\n  {\r\n    label: \"Tifonic\",\r\n    src: \"titanic-flute\",\r\n    color: _.sample(colors.buttons),\r\n    id: 4,\r\n  },\r\n  {\r\n    label: \"Flauta Mii\",\r\n    src: \"wii-flute\",\r\n    color: _.sample(colors.buttons),\r\n    id: 5,\r\n  },\r\n  {\r\n    label: \"Odio los lunes\",\r\n    src: \"odio-los-lunes\",\r\n    color: _.sample(colors.buttons),\r\n    id: 6,\r\n  },\r\n];\r\n\r\nexport default audios;\r\n","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Wrapper } from \"./styles\";\r\n\r\nimport audios from \"../../constants/audios\";\r\nimport { SoundButton } from \"../../components\";\r\n\r\nexport default function Home() {\r\n  const [currentPlaying, setCurrentPlaying] = useState(null);\r\n\r\n  function handlePlay(playerId) {\r\n    setCurrentPlaying(playerId);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {audios.map(audio => (\r\n        <SoundButton\r\n          key={audio.id}\r\n          sound={audio.src}\r\n          label={audio.label}\r\n          color={audio.color}\r\n          playing={_.isEqual(audio.id, currentPlaying) ? true : false}\r\n          handlePlay={handlePlay}\r\n          playerId={audio.id}\r\n        />\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Layout, Home } from \"./containers\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Home />\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}